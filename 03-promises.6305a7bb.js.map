{"mappings":"iiBAAA,IAAAA,EAAAC,EAAA,SAEMC,EAAaC,SAASC,cAAc,uBACpCC,EAAYF,SAASC,cAAc,sBACnCE,EAAcH,SAASC,cAAc,wBAmC3C,SAASG,EAAUC,EAAUC,IAb7B,SAAuBD,EAAUC,GAChC,OAAO,IAAIC,SAAQ,SAACC,EAASC,GAC5B,IAAMC,EAAgBC,KAAKC,SAAW,GAEtCC,YAAW,WACNH,GACHF,EAAQ,CAAEH,WAAUC,UACnBG,EAAO,CAAEJ,WAAUC,S,GAErBA,E,KAKHQ,CAAcT,EAAUC,GACtBS,MAAK,SAAAC,G,IAAGC,EAAQD,EAARX,SAAUa,EAAKF,EAALV,MAClBa,EAAAtB,GAASuB,OAAOC,QAAQ,qBAAoCC,OAAfL,EAAS,QAAYK,OAANJ,EAAM,M,IAElEK,OAAM,SAAAP,G,IAAGC,EAAQD,EAARX,SAAUa,EAAKF,EAALV,MACnBa,EAAAtB,GAASuB,OAAOI,QAAQ,oBAAmCF,OAAfL,EAAS,QAAYK,OAANJ,EAAM,M,IAxCjDlB,SAASC,cAAc,yBAE/BwB,iBAAiB,SAE3B,SAAkBC,GACjBA,EAAEC,iBAEF,IAAIrB,EAAQsB,OAAO7B,EAAW8B,OACxBC,EAAOF,OAAO1B,EAAU2B,OACxBE,EAASH,OAAOzB,EAAY0B,OAE9BG,EAAI,EACR,IAAKA,EAAI,EAAGA,GAAKD,EAAQC,GAAK,EAAE,CAG/B5B,EAFe4B,EAEK1B,GAEpBA,GAASwB,C","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\n\nconst firstDelay = document.querySelector('input[name=\"delay\"]')\nconst delayStep = document.querySelector('input[name=\"step\"]')\nconst amountInput = document.querySelector('input[name=\"amount\"]')\nconst submitBtn = document.querySelector('button[type=\"submit\"]')\n\nsubmitBtn.addEventListener(\"click\", onSubmit);\n\nfunction onSubmit(e) {\n\te.preventDefault();\n\n\tlet delay = Number(firstDelay.value)\n\tconst step = Number(delayStep.value)\n\tconst amount = Number(amountInput.value)\n\n\tlet i = 0;\n\tfor (i = 1; i <= amount; i += 1){\n\t\tlet position = i;\n\t\t\n\t\tcreateMsg(position, delay)\n\n\t\tdelay += step;\n\t}\n}\n\nfunction createPromise(position, delay) {\n\treturn new Promise((resolve, reject) => {\n\t\tconst shouldResolve = Math.random() > 0.3;\n\n\t\tsetTimeout(() => {\n\t\t\tif (shouldResolve) {\n\t\t\t\tresolve({ position, delay });\n\t\t\t} reject({ position, delay });\n\t\t},\n\t\t\tdelay);} \n\t)\n}\n\nfunction createMsg(position, delay) {\ncreatePromise(position, delay)\n\t.then(({ position, delay }) => {\n\t\tNotiflix.Notify.success(`Fulfilled promise ${position} in ${delay}ms`);\n\t})\n\t.catch(({ position, delay }) => {\n\t\tNotiflix.Notify.failure(`Rejected promise ${position} in ${delay}ms`);\n\t});\n}"],"names":["$6JpON","parcelRequire","$ce04d3a99e08e73b$var$firstDelay","document","querySelector","$ce04d3a99e08e73b$var$delayStep","$ce04d3a99e08e73b$var$amountInput","$ce04d3a99e08e73b$var$createMsg","position","delay","Promise","resolve","reject","shouldResolve","Math","random","setTimeout","$ce04d3a99e08e73b$var$createPromise","then","param","_$position","_$delay","$parcel$interopDefault","Notify","success","concat","catch","failure","addEventListener","e","preventDefault","Number","value","step","amount","i"],"version":3,"file":"03-promises.6305a7bb.js.map"}